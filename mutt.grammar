?block: "{" (stmt ";") * "}"

?stmt: "global" WORD expr -> assign_global
    | "local" WORD expr -> assign_local
    | "fn" WORD "(" WORD * ")" block -> declare_function
    | "return" expr -> return
    | "if" expr block ("elif" expr block)* ("else" block)? -> conditional
    | "while" expr block -> while
    | "print" expr -> print
    | expr
    

?expr: expr ("<" | ">" | "==" | "<=" | ">=") expr -> compare
    | term ("+"|"-") expr -> add_sub
    | term
    
?term: factor ("*"|"/") term -> mul_div
    | factor

?factor: NUMBER
    | WORD
    | ESCAPED_STRING
    | WORD "(" expr* ")" -> call
    | "True"
    | "False"
    | "None"
    | "(" expr ")"

COMMENT: /\(#[\s\S]*#\)/

%import common.NUMBER
%import common.ESCAPED_STRING
%import common.WORD
%import common.WS
%ignore WS
%ignore COMMENT
